name: CI

on:
    push:
        branches:
            - '1.x'
    pull_request:
        branches:
            - '*'
    workflow_dispatch:

permissions:
    contents: read # to fetch code (actions/checkout)

jobs:
    testsuite-linux:
        runs-on: ubuntu-24.04
        strategy:
            fail-fast: false
            matrix:
                php-version: [ '8.1', '8.2', '8.3' ]
                db-type: [ sqlite ]

        steps:
            -   uses: actions/checkout@v4

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    extensions: mbstring, intl, pdo_${{ matrix.db-type }}
                    ini-values: zend.assertions=1

            -   name: Composer install
                uses: ramsey/composer-install@v3
                with:
                    dependency-versions: ${{ matrix.dependencies }}
                    composer-options: ${{ matrix.composer-options }}

            -   name: Run PHPUnit
                run: |
                    if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then
                        export DB_URL=sqlite:///testdb.sqlite3
                    fi
                    vendor/bin/phpunit

    cs-stan:
        name: Coding Standard & Static Analysis
        runs-on: ubuntu-22.04

        steps:
            -   uses: actions/checkout@v4

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.2'
                    extensions: mbstring, intl
                    coverage: none
                    tools: phive, cs2pr

            -   name: Composer install
                uses: ramsey/composer-install@v3

            -   name: Install PHP tools with phive.
                run: "phive install --trust-gpg-keys 'CF1A108D0E7AE720,51C67305FFC2E5C0,12CE0F1D262429A5'"

            -   name: Run phpcs
                if: always()
                run: vendor/bin/phpcs --report=checkstyle src/ tests/ | cs2pr

            -   name: Run psalm
                if: always()
                run: tools/psalm --output-format=github

            -   name: Run phpstan
                if: always()
                run: tools/phpstan analyse --error-format=github

